//
// Variables and basic styles (rest)
//

// -----------------------------------------------------------------------------
// App Settings
// -----------------------------------------------------------------------------

$app-width: 1280px;
$app-height: 800px;
$app-titlebar-height: 44px;
$app-standalone-titlebar-height: 64px;

// -----------------------------------------------------------------------------
// Colors
// -----------------------------------------------------------------------------
$color-primary:         blue;
$color-divider:         #A7A7AB;


// -----------------------------------------------------------------------------
// Fonts
// -----------------------------------------------------------------------------
$font-serif             : serif;
$font-sans              : 'HelveticaNeue-Regular', 'Helvetica', sans-serif;
$font-size-base:        16px;


// -----------------------------------------------------------------------------
// Fonts
// -----------------------------------------------------------------------------
$shadow-level1:         0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
$shadow-level2:         0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);
$shadow-level3:         0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
$shadow-level4:         0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);
$shadow-level5:         0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);

// -----------------------------------------------------------------------------
// Functions
// -----------------------------------------------------------------------------
// taken from the foundation grid

@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}


// CONVERT TO REM
@function convert-to-rem($value, $base-value: $rem-base)  {
  $value: strip-unit($value) / strip-unit($base-value) * 1rem;
  @if ($value == 0rem) { $value: 0; } // Turn 0rem into 0
  @return $value;
}


@function rem-calc($values, $base-value: $rem-base) {
  $max: length($values);

  @if $max == 1 { @return convert-to-rem(nth($values, 1), $base-value); }

  $remValues: ();
  @for $i from 1 through $max {
    $remValues: append($remValues, convert-to-rem(nth($values, $i), $base-value));
  }
  @return $remValues;
}


// -----------------------------------------------------------------------------
// Sizes
// -----------------------------------------------------------------------------
//
// Like the font sizings, sizes variables - used in core/_sizes.scss - and other
// components should always be a mathematical correlation with the base font size
//


// -----------------------------------------------------------------------------
// Other Variables
// -----------------------------------------------------------------------------
$zindex-alert:    100;

// -----------------------------------------------------------------------------
// Breakpoints
// -----------------------------------------------------------------------------
//
// Breakpoints are handled by the same values as the foundation grid, check
// grid/_settings.scss
//
// $small-range: (0em, 40em);
// $medium-range: (40.063em, 64em);
// $large-range: (64.063em, 90em);
// $xlarge-range: (90.063em, 120em);
// $xxlarge-range: (120.063em, 99999999em);


// -----------------------------------------------------------------------------
// Mixins
// -----------------------------------------------------------------------------


// -----------------------------------------------------------------------------
// 'Reset' and basic styles
// -----------------------------------------------------------------------------
body, html {
    margin: 0;
    padding: 0;
    font-size: $font-size-base;
    text-rendering: optimizeLegibility;
    font-family: $font-sans;
    height: 100%;
    width: 100%;
}

a {
    color: $color-primary;
    text-decoration: none;
    transform: translateZ(0);
    
    &:hover {
        color: $color-primary;
    }

}

* {
    box-sizing: border-box;
}